plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
results$cluster
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
rvec.length
rvec.length()
length(rvec)
rvec[46]
rvec[26]
subset$cluster_group = rvec
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
subset$cluster_group = rvec
rvec
subset[0]
subset[1]
subset[][1]
subset[][1]
subset[1][4]
subset(1, 4)
sub(1, 4)
sub = subset
sub(1, 4)
sub[1]
View(sub)
sub[,1]
sub[][1]
sub[1][1]
sub[1,]
sub[146,]
sub[137,]
sub[1,]
outlier = sub[sub[, "id_nummer"] == 137.0,]
View(outlier)
outlier = sub[sub[, "id_nummer"] == 137.0,]$gruppe_3
outlier
outlier = sub[sub[, "id_nummer"] == 137.0,]
View(outlier)
outlier = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
outlier
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
outlier = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
outlier
# sportbezogene angst vor Leistungsversagen vs generelle Ängstlichkeit
# note that id's are not integers - id_nummer is decimal if at least NA in row
subset = subset(data, select = c(sp_angst_lv_1, t_angst_1, sp_angst_lv_3, id_nummer, gruppe_3))
subset = subset[complete.cases(subset), ]
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
outlier = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
outlier
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
outlier = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
outlier
library(foreign)
data = read.spss("data.sav", use.value.labels = TRUE, to.data.frame = TRUE)
# find subset of all classes including wagnis or control and get all variables of interest
data = data[data$gruppe_3 == "Spiel-Wagnis" | data$gruppe_3 == "Wagnis-Spiel" | data$gruppe_3 == "Wagnis-Leistung" | data$gruppe_3 == "Leistung-Wagnis" | data$gruppe_3 == "Kontroll", ]
# sportbezogene angst vor Leistungsversagen vs generelle Ängstlichkeit
# note that id's are not integers - id_nummer is decimal if at least NA in row
subset = subset(data, select = c(sp_angst_lv_1, t_angst_1, sp_angst_lv_3, id_nummer, gruppe_3))
subset = subset[complete.cases(subset), ]
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
outlier = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
outlier
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
View(sub)
View(subset)
for (i in 1:nrow(sub)) {
i
}
for (i in 1:nrow(sub)) {
print(i)
}
View(subset)
for (i in 1:nrow(sub)) {
if (sub[i, 6] == high_group) {
sub[i, 6] = 'high'
} else {
sub[i, 6] = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub[i, 6] == high_group) {
sub[i]$cluster_group = 'high'
} else {
sub[i]$cluster_group = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub[i, 6] == high_group) {
print('was here')
sub[i]$cluster_group = 'high'
} else {
sub[i]$cluster_group = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub[i]$cluster_group == high_group) {
print('was here')
sub[i]$cluster_group = 'high'
} else {
sub[i]$cluster_group = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) {
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
}
high_group
for (i in 1:nrow(sub)) {
print(sub$cluster_group[i])
#if (sub$cluster_group[i] == high_group) {
# sub$cluster_group[i] = 'high'
#} else {
#sub$cluster_group[i] = 'low'
#}
}
View(sub)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) {
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] === high_group) {
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
}
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) {
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
}
library(foreign)
data = read.spss("data.sav", use.value.labels = TRUE, to.data.frame = TRUE)
# find subset of all classes including wagnis or control and get all variables of interest
data = data[data$gruppe_3 == "Spiel-Wagnis" | data$gruppe_3 == "Wagnis-Spiel" | data$gruppe_3 == "Wagnis-Leistung" | data$gruppe_3 == "Leistung-Wagnis" | data$gruppe_3 == "Kontroll", ]
# sportbezogene angst vor Leistungsversagen vs generelle Ängstlichkeit
# note that id's are not integers - id_nummer is decimal if at least NA in row
subset = subset(data, select = c(sp_angst_lv_1, t_angst_1, sp_angst_lv_3, id_nummer, gruppe_3))
subset = subset[complete.cases(subset), ]
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) {
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
}
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3 != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
sub = subset
sub[1,]
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
warnings()
View(subset)
sub$gruppe_3 <- as.character (sub$gruppe_3)
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
sub$gruppe_3 <- as.character (sub$gruppe_3)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
sub.gruppe_3 <- as.character (sub.gruppe_3)
sub$gruppe_3 <- as.character(sub$gruppe_3)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
sub$gruppe_3 <- as.character(sub$gruppe_3)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
View(sub)
print('control-high:', nkh)
sub$gruppe_3 <- as.character(sub$gruppe_3)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
# find number of subjects in each group
nkh = 0
nkl = 0
neh = 0
nel = 0
for (i in 1:nrow(sub)) {
if (sub$gruppe_3[i] == 'Kontroll' && sub$cluster_group[i] == "high") {
nkh = nkh + 1
} else if (sub$gruppe_3[i] == 'Kontroll' && sub$cluster_group[i] == "low") {
nkl = nkl + 1
} else if (sub$gruppe_3[i] == 'Experimental' && sub$cluster_group[i] == "high") {
neh = neh + 1
} else if (sub$gruppe_3[i] == 'Experimental' && sub$cluster_group[i] == "low") {
nel = nel + 1
}
}
print('control-high:', nkh)
print('control-low:', nkl)
print('experimental-high:', neh)
print('experimental-low:', nel)
print('control-high:' + nkh)
print('control-low:' + nkl)
print(nkh)
print(nkl)
print(neh)
print(nel)
library(foreign)
data = read.spss("data.sav", use.value.labels = TRUE, to.data.frame = TRUE)
# find subset of all classes including wagnis or control and get all variables of interest
data = data[data$gruppe_3 == "Spiel-Wagnis" | data$gruppe_3 == "Wagnis-Spiel" | data$gruppe_3 == "Wagnis-Leistung" | data$gruppe_3 == "Leistung-Wagnis" | data$gruppe_3 == "Kontroll", ]
# sportbezogene angst vor Leistungsversagen vs generelle Ängstlichkeit
# note that id's are not integers - id_nummer is decimal if at least NA in row
subset = subset(data, select = c(sp_angst_lv_1, t_angst_1, sp_angst_lv_3, id_nummer, gruppe_3))
subset = subset[complete.cases(subset), ]
ca = subset(subset, select = c(sp_angst_lv_1, t_angst_1))
# find optimal k
k.max = 15
wss = sapply(1:k.max, function(k) { # within sum of squares
kmeans(c(ca$sp_angst_lv_1, ca$t_angst_1), k, nstart=50, iter.max = 15)$tot.withinss
})
plot(1:k.max, wss,
type="b", pch = 19, frame = FALSE,
xlab="Number of clusters K",
ylab="Total within-clusters sum of squares"
) # elbow method, optimal k between 2-3
# kmeans clustering
results = kmeans(ca, 2)
results
plot(ca[c("sp_angst_lv_1", "t_angst_1")], col = results$cluster)
# goal is to assing a cluster group to each subject
rvec = results$cluster
rvec
subset$cluster_group = rvec
sub = subset
sub[1,]
high_group = sub[sub[, "id_nummer"] == 137.0,]$cluster_group
high_group
sub$gruppe_3 <- as.character(sub$gruppe_3)
for (i in 1:nrow(sub)) {
if (sub$cluster_group[i] == high_group) { # assign cluster group
sub$cluster_group[i] = 'high'
} else {
sub$cluster_group[i] = 'low'
}
if (sub$gruppe_3[i] != "Kontroll") {
sub$gruppe_3[i] = "Experimental"
}
}
View(sub)
# find number of subjects in each group
nkh = 0
nkl = 0
neh = 0
nel = 0
for (i in 1:nrow(sub)) {
if (sub$gruppe_3[i] == 'Kontroll' & sub$cluster_group[i] == "high") {
nkh = nkh + 1
} else if (sub$gruppe_3[i] == 'Kontroll' & sub$cluster_group[i] == "low") {
nkl = nkl + 1
} else if (sub$gruppe_3[i] == 'Experimental' & sub$cluster_group[i] == "high") {
neh = neh + 1
} else if (sub$gruppe_3[i] == 'Experimental' & sub$cluster_group[i] == "low") {
nel = nel + 1
}
}
print(nkh)
print(nkl)
print(neh)
print(nel)
write.csv(sub, 'cluster.csv')
setwd("~/Desktop/wagnis")
write.csv(sub, './cluster.csv')
setwd("~/Desktop/wagnis")
# anova
data = read.csv('cluster.csv')
View(data)
View(data)
# low groups (exp vs control)
low = data[data$cluster_group == "low" & ( data$gruppe_3 == "Kontroll" | "Experimentall" ), ]
# low groups (exp vs control)
low = data[data$cluster_group == "low" & ( data$gruppe_3 == "Kontroll" | "Experimental" ), ]
# low groups (exp vs control)
low = data[data$cluster_group == "low" & ( data$gruppe_3 == "Kontroll" | data$gruppe_3 == "Experimental" ), ]
# anova
data = read.csv('cluster.csv')
# low groups (exp vs control)
low = data[data$cluster_group == "low" & ( data$gruppe_3 == "Kontroll" | data$gruppe_3 == "Experimental" ), ]
View(low)
library(dplyr)
install.packages("tidyverse")
